#include <stdio.h>
#include <limits.h>
#include <stdbool.h>

#define N 4

int tsp(int graph[N][N], bool visited[N], int pos, int count, int cost, int start) {
    int ans, i, temp;
    if (count == N && graph[pos][start]) {
        return cost + graph[pos][start];
    }

    ans = INT_MAX;
    for (i = 0; i < N; i++) {
        if (!visited[i] && graph[pos][i]) {
            visited[i] = true;
            temp = tsp(graph, visited, i, count + 1, cost + graph[pos][i], start);
            if (temp < ans) {
                ans = temp;
            }
            visited[i] = false;
        }
    }

    return ans;
}

int main() {
    int graph[N][N] = {
        {0, 10, 15, 20},
        {10, 0, 35, 25},
        {15, 35, 0, 30},
        {20, 25, 30, 0}
    };
    bool visited[N];
    int i, result;

    for (i = 0; i < N; i++) {
        visited[i] = false;
    }

    visited[0] = true;
    result = tsp(graph, visited, 0, 1, 0, 0);

    printf("Minimum cost: %d\n", result);
    return 0;
}
